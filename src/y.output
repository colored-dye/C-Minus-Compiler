Terminals unused in grammar

    MYCHAR
    MYELSE
    MYERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration
    3                 | declaration_list declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier id MYSEMI
    7                | type_specifier id MYLC MYNUM MYRC MYSEMI

    8 fun_declaration: type_specifier id MYLP params MYRP compound_stmt

    9 type_specifier: MYINT
   10               | MYVOID
   11               | MYREAL

   12 params: param_list
   13       | MYVOID

   14 param_list: param
   15           | param_list MYCOMMA param

   16 param: type_specifier id
   17      | type_specifier id MYLC MYRC

   18 compound_stmt: MYLB local_declarations statement_list MYRB

   19 local_declarations: local_declarations var_declaration
   20                   | %empty

   21 statement_list: statement
   22               | statement_list statement

   23 statement: expression_stmt
   24          | compound_stmt
   25          | selection_stmt
   26          | while_stmt
   27          | for_stmt
   28          | return_stmt

   29 expression_stmt: expression MYSEMI
   30                | MYSEMI

   31 expression: assign
   32           | simple_expression

   33 assign: var MYASSIGN expression

   34 selection_stmt: MYIF MYLP expression MYRP statement
   35               | MYIF MYLP expression MYRP statement ELSE statement

   36 while_stmt: MYWHILE MYLP expression MYRP statement

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI for_param2 MYSEMI for_param3 MYRP statement

   38 for_param1: %empty
   39           | assign

   40 for_param2: %empty
   41           | expression

   42 for_param3: %empty
   43           | assign

   44 return_stmt: MYRETURN MYSEMI
   45            | MYRETURN expression MYSEMI

   46 var: id
   47    | id MYLC expression MYRC

   48 simple_expression: additive_expression relop additive_expression
   49                  | additive_expression

   50 additive_expression: additive_expression addop term
   51                    | term

   52 relop: MYLT
   53      | MYLE
   54      | MYGT
   55      | MYGE
   56      | MYEQ
   57      | MYNE

   58 addop: MYADD
   59      | MYSUB

   60 term: term mulop factor
   61     | factor

   62 factor: MYLP expression MYRP
   63       | var
   64       | call
   65       | MYNUM

   66 mulop: MYMUL
   67      | MYDIV

   68 call: id MYLP args MYRP

   69 args: arg_list
   70     | %empty

   71 arg_list: arg_list MYCOMMA expression
   72         | expression

   73 id: MYID
   74   | error


Terminals, with rules where they appear

    $end (0) 0
    error (256) 74
    MYID (258) 73
    MYNUM (259) 7 65
    MYINT (260) 9
    MYVOID (261) 10 13
    MYREAL (262) 11
    MYCHAR (263)
    MYRETURN (264) 44 45
    MYIF (265) 34 35
    MYELSE (266)
    MYWHILE (267) 36
    MYFOR (268) 37
    MYGT <integer> (269) 54
    MYLT <integer> (270) 52
    MYGE <integer> (271) 55
    MYLE <integer> (272) 53
    MYNE <integer> (273) 57
    MYEQ <integer> (274) 56
    MYADD <integer> (275) 58
    MYSUB <integer> (276) 59
    MYMUL <integer> (277) 66
    MYDIV <integer> (278) 67
    MYLP (279) 8 34 35 36 37 62 68
    MYRP (280) 8 34 35 36 37 62 68
    MYLB (281) 18
    MYRB (282) 18
    MYLC (283) 7 17 47
    MYRC (284) 7 17 47
    MYSEMI (285) 6 7 29 30 37 44 45
    MYCOMMA (286) 15 71
    MYASSIGN (287) 33
    MYERROR (288)
    LOWER_THAN_ELSE (289)
    ELSE (290) 35


Nonterminals, with rules where they appear

    $accept (36)
        on left: 0
    program <node> (37)
        on left: 1
        on right: 0
    declaration_list <node> (38)
        on left: 2 3
        on right: 1 3
    declaration <node> (39)
        on left: 4 5
        on right: 2 3
    var_declaration <node> (40)
        on left: 6 7
        on right: 4 19
    fun_declaration <node> (41)
        on left: 8
        on right: 5
    type_specifier <node> (42)
        on left: 9 10 11
        on right: 6 7 8 16 17
    params <node> (43)
        on left: 12 13
        on right: 8
    param_list <node> (44)
        on left: 14 15
        on right: 12 15
    param <node> (45)
        on left: 16 17
        on right: 14 15
    compound_stmt <node> (46)
        on left: 18
        on right: 8 24
    local_declarations <node> (47)
        on left: 19 20
        on right: 18 19
    statement_list <node> (48)
        on left: 21 22
        on right: 18 22
    statement <node> (49)
        on left: 23 24 25 26 27 28
        on right: 21 22 34 35 36 37
    expression_stmt <node> (50)
        on left: 29 30
        on right: 23
    expression <node> (51)
        on left: 31 32
        on right: 29 33 34 35 36 41 45 47 62 71 72
    assign <node> (52)
        on left: 33
        on right: 31 39 43
    selection_stmt <node> (53)
        on left: 34 35
        on right: 25
    while_stmt <node> (54)
        on left: 36
        on right: 26
    for_stmt <node> (55)
        on left: 37
        on right: 27
    for_param1 <node> (56)
        on left: 38 39
        on right: 37
    for_param2 <node> (57)
        on left: 40 41
        on right: 37
    for_param3 <node> (58)
        on left: 42 43
        on right: 37
    return_stmt <node> (59)
        on left: 44 45
        on right: 28
    var <node> (60)
        on left: 46 47
        on right: 33 63
    simple_expression <node> (61)
        on left: 48 49
        on right: 32
    additive_expression <node> (62)
        on left: 50 51
        on right: 48 49 50
    relop <node> (63)
        on left: 52 53 54 55 56 57
        on right: 48
    addop <node> (64)
        on left: 58 59
        on right: 50
    term <node> (65)
        on left: 60 61
        on right: 50 51 60
    factor <node> (66)
        on left: 62 63 64 65
        on right: 60 61
    mulop <node> (67)
        on left: 66 67
        on right: 60
    call <node> (68)
        on left: 68
        on right: 64
    args <node> (69)
        on left: 69 70
        on right: 68
    arg_list <node> (70)
        on left: 71 72
        on right: 69 71
    id <node> (71)
        on left: 73 74
        on right: 6 7 8 16 17 46 47 68


State 0

    0 $accept: . program $end

    MYINT   shift, and go to state 1
    MYVOID  shift, and go to state 2
    MYREAL  shift, and go to state 3

    program           go to state 4
    declaration_list  go to state 5
    declaration       go to state 6
    var_declaration   go to state 7
    fun_declaration   go to state 8
    type_specifier    go to state 9


State 1

    9 type_specifier: MYINT .

    $default  reduce using rule 9 (type_specifier)


State 2

   10 type_specifier: MYVOID .

    $default  reduce using rule 10 (type_specifier)


State 3

   11 type_specifier: MYREAL .

    $default  reduce using rule 11 (type_specifier)


State 4

    0 $accept: program . $end

    $end  shift, and go to state 10


State 5

    1 program: declaration_list .
    3 declaration_list: declaration_list . declaration

    MYINT   shift, and go to state 1
    MYVOID  shift, and go to state 2
    MYREAL  shift, and go to state 3

    $default  reduce using rule 1 (program)

    declaration      go to state 11
    var_declaration  go to state 7
    fun_declaration  go to state 8
    type_specifier   go to state 9


State 6

    2 declaration_list: declaration .

    $default  reduce using rule 2 (declaration_list)


State 7

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 8

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 9

    6 var_declaration: type_specifier . id MYSEMI
    7                | type_specifier . id MYLC MYNUM MYRC MYSEMI
    8 fun_declaration: type_specifier . id MYLP params MYRP compound_stmt

    error  shift, and go to state 12
    MYID   shift, and go to state 13

    id  go to state 14


State 10

    0 $accept: program $end .

    $default  accept


State 11

    3 declaration_list: declaration_list declaration .

    $default  reduce using rule 3 (declaration_list)


State 12

   74 id: error .

    $default  reduce using rule 74 (id)


State 13

   73 id: MYID .

    $default  reduce using rule 73 (id)


State 14

    6 var_declaration: type_specifier id . MYSEMI
    7                | type_specifier id . MYLC MYNUM MYRC MYSEMI
    8 fun_declaration: type_specifier id . MYLP params MYRP compound_stmt

    MYLP    shift, and go to state 15
    MYLC    shift, and go to state 16
    MYSEMI  shift, and go to state 17


State 15

    8 fun_declaration: type_specifier id MYLP . params MYRP compound_stmt

    MYINT   shift, and go to state 1
    MYVOID  shift, and go to state 18
    MYREAL  shift, and go to state 3

    type_specifier  go to state 19
    params          go to state 20
    param_list      go to state 21
    param           go to state 22


State 16

    7 var_declaration: type_specifier id MYLC . MYNUM MYRC MYSEMI

    MYNUM  shift, and go to state 23


State 17

    6 var_declaration: type_specifier id MYSEMI .

    $default  reduce using rule 6 (var_declaration)


State 18

   10 type_specifier: MYVOID .
   13 params: MYVOID .

    MYRP      reduce using rule 13 (params)
    $default  reduce using rule 10 (type_specifier)


State 19

   16 param: type_specifier . id
   17      | type_specifier . id MYLC MYRC

    error  shift, and go to state 12
    MYID   shift, and go to state 13

    id  go to state 24


State 20

    8 fun_declaration: type_specifier id MYLP params . MYRP compound_stmt

    MYRP  shift, and go to state 25


State 21

   12 params: param_list .
   15 param_list: param_list . MYCOMMA param

    MYCOMMA  shift, and go to state 26

    $default  reduce using rule 12 (params)


State 22

   14 param_list: param .

    $default  reduce using rule 14 (param_list)


State 23

    7 var_declaration: type_specifier id MYLC MYNUM . MYRC MYSEMI

    MYRC  shift, and go to state 27


State 24

   16 param: type_specifier id .
   17      | type_specifier id . MYLC MYRC

    MYLC  shift, and go to state 28

    $default  reduce using rule 16 (param)


State 25

    8 fun_declaration: type_specifier id MYLP params MYRP . compound_stmt

    MYLB  shift, and go to state 29

    compound_stmt  go to state 30


State 26

   15 param_list: param_list MYCOMMA . param

    MYINT   shift, and go to state 1
    MYVOID  shift, and go to state 2
    MYREAL  shift, and go to state 3

    type_specifier  go to state 19
    param           go to state 31


State 27

    7 var_declaration: type_specifier id MYLC MYNUM MYRC . MYSEMI

    MYSEMI  shift, and go to state 32


State 28

   17 param: type_specifier id MYLC . MYRC

    MYRC  shift, and go to state 33


State 29

   18 compound_stmt: MYLB . local_declarations statement_list MYRB

    $default  reduce using rule 20 (local_declarations)

    local_declarations  go to state 34


State 30

    8 fun_declaration: type_specifier id MYLP params MYRP compound_stmt .

    $default  reduce using rule 8 (fun_declaration)


State 31

   15 param_list: param_list MYCOMMA param .

    $default  reduce using rule 15 (param_list)


State 32

    7 var_declaration: type_specifier id MYLC MYNUM MYRC MYSEMI .

    $default  reduce using rule 7 (var_declaration)


State 33

   17 param: type_specifier id MYLC MYRC .

    $default  reduce using rule 17 (param)


State 34

   18 compound_stmt: MYLB local_declarations . statement_list MYRB
   19 local_declarations: local_declarations . var_declaration

    error     shift, and go to state 12
    MYID      shift, and go to state 13
    MYNUM     shift, and go to state 35
    MYINT     shift, and go to state 1
    MYVOID    shift, and go to state 2
    MYREAL    shift, and go to state 3
    MYRETURN  shift, and go to state 36
    MYIF      shift, and go to state 37
    MYWHILE   shift, and go to state 38
    MYFOR     shift, and go to state 39
    MYLP      shift, and go to state 40
    MYLB      shift, and go to state 29
    MYSEMI    shift, and go to state 41

    var_declaration      go to state 42
    type_specifier       go to state 43
    compound_stmt        go to state 44
    statement_list       go to state 45
    statement            go to state 46
    expression_stmt      go to state 47
    expression           go to state 48
    assign               go to state 49
    selection_stmt       go to state 50
    while_stmt           go to state 51
    for_stmt             go to state 52
    return_stmt          go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 35

   65 factor: MYNUM .

    $default  reduce using rule 65 (factor)


State 36

   44 return_stmt: MYRETURN . MYSEMI
   45            | MYRETURN . expression MYSEMI

    error   shift, and go to state 12
    MYID    shift, and go to state 13
    MYNUM   shift, and go to state 35
    MYLP    shift, and go to state 40
    MYSEMI  shift, and go to state 61

    expression           go to state 62
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 37

   34 selection_stmt: MYIF . MYLP expression MYRP statement
   35               | MYIF . MYLP expression MYRP statement ELSE statement

    MYLP  shift, and go to state 63


State 38

   36 while_stmt: MYWHILE . MYLP expression MYRP statement

    MYLP  shift, and go to state 64


State 39

   37 for_stmt: MYFOR . MYLP for_param1 MYSEMI for_param2 MYSEMI for_param3 MYRP statement

    MYLP  shift, and go to state 65


State 40

   62 factor: MYLP . expression MYRP

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    expression           go to state 66
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 41

   30 expression_stmt: MYSEMI .

    $default  reduce using rule 30 (expression_stmt)


State 42

   19 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 19 (local_declarations)


State 43

    6 var_declaration: type_specifier . id MYSEMI
    7                | type_specifier . id MYLC MYNUM MYRC MYSEMI

    error  shift, and go to state 12
    MYID   shift, and go to state 13

    id  go to state 67


State 44

   24 statement: compound_stmt .

    $default  reduce using rule 24 (statement)


State 45

   18 compound_stmt: MYLB local_declarations statement_list . MYRB
   22 statement_list: statement_list . statement

    error     shift, and go to state 12
    MYID      shift, and go to state 13
    MYNUM     shift, and go to state 35
    MYRETURN  shift, and go to state 36
    MYIF      shift, and go to state 37
    MYWHILE   shift, and go to state 38
    MYFOR     shift, and go to state 39
    MYLP      shift, and go to state 40
    MYLB      shift, and go to state 29
    MYRB      shift, and go to state 68
    MYSEMI    shift, and go to state 41

    compound_stmt        go to state 44
    statement            go to state 69
    expression_stmt      go to state 47
    expression           go to state 48
    assign               go to state 49
    selection_stmt       go to state 50
    while_stmt           go to state 51
    for_stmt             go to state 52
    return_stmt          go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 46

   21 statement_list: statement .

    $default  reduce using rule 21 (statement_list)


State 47

   23 statement: expression_stmt .

    $default  reduce using rule 23 (statement)


State 48

   29 expression_stmt: expression . MYSEMI

    MYSEMI  shift, and go to state 70


State 49

   31 expression: assign .

    $default  reduce using rule 31 (expression)


State 50

   25 statement: selection_stmt .

    $default  reduce using rule 25 (statement)


State 51

   26 statement: while_stmt .

    $default  reduce using rule 26 (statement)


State 52

   27 statement: for_stmt .

    $default  reduce using rule 27 (statement)


State 53

   28 statement: return_stmt .

    $default  reduce using rule 28 (statement)


State 54

   33 assign: var . MYASSIGN expression
   63 factor: var .

    MYASSIGN  shift, and go to state 71

    $default  reduce using rule 63 (factor)


State 55

   32 expression: simple_expression .

    $default  reduce using rule 32 (expression)


State 56

   48 simple_expression: additive_expression . relop additive_expression
   49                  | additive_expression .
   50 additive_expression: additive_expression . addop term

    MYGT   shift, and go to state 72
    MYLT   shift, and go to state 73
    MYGE   shift, and go to state 74
    MYLE   shift, and go to state 75
    MYNE   shift, and go to state 76
    MYEQ   shift, and go to state 77
    MYADD  shift, and go to state 78
    MYSUB  shift, and go to state 79

    $default  reduce using rule 49 (simple_expression)

    relop  go to state 80
    addop  go to state 81


State 57

   51 additive_expression: term .
   60 term: term . mulop factor

    MYMUL  shift, and go to state 82
    MYDIV  shift, and go to state 83

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 84


State 58

   61 term: factor .

    $default  reduce using rule 61 (term)


State 59

   64 factor: call .

    $default  reduce using rule 64 (factor)


State 60

   46 var: id .
   47    | id . MYLC expression MYRC
   68 call: id . MYLP args MYRP

    MYLP  shift, and go to state 85
    MYLC  shift, and go to state 86

    $default  reduce using rule 46 (var)


State 61

   44 return_stmt: MYRETURN MYSEMI .

    $default  reduce using rule 44 (return_stmt)


State 62

   45 return_stmt: MYRETURN expression . MYSEMI

    MYSEMI  shift, and go to state 87


State 63

   34 selection_stmt: MYIF MYLP . expression MYRP statement
   35               | MYIF MYLP . expression MYRP statement ELSE statement

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    expression           go to state 88
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 64

   36 while_stmt: MYWHILE MYLP . expression MYRP statement

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    expression           go to state 89
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 65

   37 for_stmt: MYFOR MYLP . for_param1 MYSEMI for_param2 MYSEMI for_param3 MYRP statement

    error  shift, and go to state 12
    MYID   shift, and go to state 13

    MYSEMI  reduce using rule 38 (for_param1)

    assign      go to state 90
    for_param1  go to state 91
    var         go to state 92
    id          go to state 93


State 66

   62 factor: MYLP expression . MYRP

    MYRP  shift, and go to state 94


State 67

    6 var_declaration: type_specifier id . MYSEMI
    7                | type_specifier id . MYLC MYNUM MYRC MYSEMI

    MYLC    shift, and go to state 16
    MYSEMI  shift, and go to state 17


State 68

   18 compound_stmt: MYLB local_declarations statement_list MYRB .

    $default  reduce using rule 18 (compound_stmt)


State 69

   22 statement_list: statement_list statement .

    $default  reduce using rule 22 (statement_list)


State 70

   29 expression_stmt: expression MYSEMI .

    $default  reduce using rule 29 (expression_stmt)


State 71

   33 assign: var MYASSIGN . expression

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    expression           go to state 95
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 72

   54 relop: MYGT .

    $default  reduce using rule 54 (relop)


State 73

   52 relop: MYLT .

    $default  reduce using rule 52 (relop)


State 74

   55 relop: MYGE .

    $default  reduce using rule 55 (relop)


State 75

   53 relop: MYLE .

    $default  reduce using rule 53 (relop)


State 76

   57 relop: MYNE .

    $default  reduce using rule 57 (relop)


State 77

   56 relop: MYEQ .

    $default  reduce using rule 56 (relop)


State 78

   58 addop: MYADD .

    $default  reduce using rule 58 (addop)


State 79

   59 addop: MYSUB .

    $default  reduce using rule 59 (addop)


State 80

   48 simple_expression: additive_expression relop . additive_expression

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    var                  go to state 96
    additive_expression  go to state 97
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 81

   50 additive_expression: additive_expression addop . term

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    var     go to state 96
    term    go to state 98
    factor  go to state 58
    call    go to state 59
    id      go to state 60


State 82

   66 mulop: MYMUL .

    $default  reduce using rule 66 (mulop)


State 83

   67 mulop: MYDIV .

    $default  reduce using rule 67 (mulop)


State 84

   60 term: term mulop . factor

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    var     go to state 96
    factor  go to state 99
    call    go to state 59
    id      go to state 60


State 85

   68 call: id MYLP . args MYRP

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    MYRP  reduce using rule 70 (args)

    expression           go to state 100
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    args                 go to state 101
    arg_list             go to state 102
    id                   go to state 60


State 86

   47 var: id MYLC . expression MYRC

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    expression           go to state 103
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 87

   45 return_stmt: MYRETURN expression MYSEMI .

    $default  reduce using rule 45 (return_stmt)


State 88

   34 selection_stmt: MYIF MYLP expression . MYRP statement
   35               | MYIF MYLP expression . MYRP statement ELSE statement

    MYRP  shift, and go to state 104


State 89

   36 while_stmt: MYWHILE MYLP expression . MYRP statement

    MYRP  shift, and go to state 105


State 90

   39 for_param1: assign .

    $default  reduce using rule 39 (for_param1)


State 91

   37 for_stmt: MYFOR MYLP for_param1 . MYSEMI for_param2 MYSEMI for_param3 MYRP statement

    MYSEMI  shift, and go to state 106


State 92

   33 assign: var . MYASSIGN expression

    MYASSIGN  shift, and go to state 71


State 93

   46 var: id .
   47    | id . MYLC expression MYRC

    MYLC  shift, and go to state 86

    $default  reduce using rule 46 (var)


State 94

   62 factor: MYLP expression MYRP .

    $default  reduce using rule 62 (factor)


State 95

   33 assign: var MYASSIGN expression .

    $default  reduce using rule 33 (assign)


State 96

   63 factor: var .

    $default  reduce using rule 63 (factor)


State 97

   48 simple_expression: additive_expression relop additive_expression .
   50 additive_expression: additive_expression . addop term

    MYADD  shift, and go to state 78
    MYSUB  shift, and go to state 79

    $default  reduce using rule 48 (simple_expression)

    addop  go to state 81


State 98

   50 additive_expression: additive_expression addop term .
   60 term: term . mulop factor

    MYMUL  shift, and go to state 82
    MYDIV  shift, and go to state 83

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 84


State 99

   60 term: term mulop factor .

    $default  reduce using rule 60 (term)


State 100

   72 arg_list: expression .

    $default  reduce using rule 72 (arg_list)


State 101

   68 call: id MYLP args . MYRP

    MYRP  shift, and go to state 107


State 102

   69 args: arg_list .
   71 arg_list: arg_list . MYCOMMA expression

    MYCOMMA  shift, and go to state 108

    $default  reduce using rule 69 (args)


State 103

   47 var: id MYLC expression . MYRC

    MYRC  shift, and go to state 109


State 104

   34 selection_stmt: MYIF MYLP expression MYRP . statement
   35               | MYIF MYLP expression MYRP . statement ELSE statement

    error     shift, and go to state 12
    MYID      shift, and go to state 13
    MYNUM     shift, and go to state 35
    MYRETURN  shift, and go to state 36
    MYIF      shift, and go to state 37
    MYWHILE   shift, and go to state 38
    MYFOR     shift, and go to state 39
    MYLP      shift, and go to state 40
    MYLB      shift, and go to state 29
    MYSEMI    shift, and go to state 41

    compound_stmt        go to state 44
    statement            go to state 110
    expression_stmt      go to state 47
    expression           go to state 48
    assign               go to state 49
    selection_stmt       go to state 50
    while_stmt           go to state 51
    for_stmt             go to state 52
    return_stmt          go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 105

   36 while_stmt: MYWHILE MYLP expression MYRP . statement

    error     shift, and go to state 12
    MYID      shift, and go to state 13
    MYNUM     shift, and go to state 35
    MYRETURN  shift, and go to state 36
    MYIF      shift, and go to state 37
    MYWHILE   shift, and go to state 38
    MYFOR     shift, and go to state 39
    MYLP      shift, and go to state 40
    MYLB      shift, and go to state 29
    MYSEMI    shift, and go to state 41

    compound_stmt        go to state 44
    statement            go to state 111
    expression_stmt      go to state 47
    expression           go to state 48
    assign               go to state 49
    selection_stmt       go to state 50
    while_stmt           go to state 51
    for_stmt             go to state 52
    return_stmt          go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 106

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI . for_param2 MYSEMI for_param3 MYRP statement

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    MYSEMI  reduce using rule 40 (for_param2)

    expression           go to state 112
    assign               go to state 49
    for_param2           go to state 113
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 107

   68 call: id MYLP args MYRP .

    $default  reduce using rule 68 (call)


State 108

   71 arg_list: arg_list MYCOMMA . expression

    error  shift, and go to state 12
    MYID   shift, and go to state 13
    MYNUM  shift, and go to state 35
    MYLP   shift, and go to state 40

    expression           go to state 114
    assign               go to state 49
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 109

   47 var: id MYLC expression MYRC .

    $default  reduce using rule 47 (var)


State 110

   34 selection_stmt: MYIF MYLP expression MYRP statement .
   35               | MYIF MYLP expression MYRP statement . ELSE statement

    ELSE  shift, and go to state 115

    $default  reduce using rule 34 (selection_stmt)


State 111

   36 while_stmt: MYWHILE MYLP expression MYRP statement .

    $default  reduce using rule 36 (while_stmt)


State 112

   41 for_param2: expression .

    $default  reduce using rule 41 (for_param2)


State 113

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI for_param2 . MYSEMI for_param3 MYRP statement

    MYSEMI  shift, and go to state 116


State 114

   71 arg_list: arg_list MYCOMMA expression .

    $default  reduce using rule 71 (arg_list)


State 115

   35 selection_stmt: MYIF MYLP expression MYRP statement ELSE . statement

    error     shift, and go to state 12
    MYID      shift, and go to state 13
    MYNUM     shift, and go to state 35
    MYRETURN  shift, and go to state 36
    MYIF      shift, and go to state 37
    MYWHILE   shift, and go to state 38
    MYFOR     shift, and go to state 39
    MYLP      shift, and go to state 40
    MYLB      shift, and go to state 29
    MYSEMI    shift, and go to state 41

    compound_stmt        go to state 44
    statement            go to state 117
    expression_stmt      go to state 47
    expression           go to state 48
    assign               go to state 49
    selection_stmt       go to state 50
    while_stmt           go to state 51
    for_stmt             go to state 52
    return_stmt          go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 116

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI for_param2 MYSEMI . for_param3 MYRP statement

    error  shift, and go to state 12
    MYID   shift, and go to state 13

    MYRP  reduce using rule 42 (for_param3)

    assign      go to state 118
    for_param3  go to state 119
    var         go to state 92
    id          go to state 93


State 117

   35 selection_stmt: MYIF MYLP expression MYRP statement ELSE statement .

    $default  reduce using rule 35 (selection_stmt)


State 118

   43 for_param3: assign .

    $default  reduce using rule 43 (for_param3)


State 119

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI for_param2 MYSEMI for_param3 . MYRP statement

    MYRP  shift, and go to state 120


State 120

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI for_param2 MYSEMI for_param3 MYRP . statement

    error     shift, and go to state 12
    MYID      shift, and go to state 13
    MYNUM     shift, and go to state 35
    MYRETURN  shift, and go to state 36
    MYIF      shift, and go to state 37
    MYWHILE   shift, and go to state 38
    MYFOR     shift, and go to state 39
    MYLP      shift, and go to state 40
    MYLB      shift, and go to state 29
    MYSEMI    shift, and go to state 41

    compound_stmt        go to state 44
    statement            go to state 121
    expression_stmt      go to state 47
    expression           go to state 48
    assign               go to state 49
    selection_stmt       go to state 50
    while_stmt           go to state 51
    for_stmt             go to state 52
    return_stmt          go to state 53
    var                  go to state 54
    simple_expression    go to state 55
    additive_expression  go to state 56
    term                 go to state 57
    factor               go to state 58
    call                 go to state 59
    id                   go to state 60


State 121

   37 for_stmt: MYFOR MYLP for_param1 MYSEMI for_param2 MYSEMI for_param3 MYRP statement .

    $default  reduce using rule 37 (for_stmt)
