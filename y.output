Terminals unused in grammar

    CHAR
    ERROR


Grammar

    0 $accept: program $end

    1 program: declaration_list

    2 declaration_list: declaration
    3                 | declaration_list declaration

    4 declaration: var_declaration
    5            | fun_declaration

    6 var_declaration: type_specifier id SEMI
    7                | type_specifier id LC NUM RC SEMI

    8 fun_declaration: type_specifier id LP params RP
    9                | compound_stmt

   10 type_specifier: INT
   11               | VOID
   12               | REAL

   13 params: param_list
   14       | VOID

   15 param_list: param
   16           | param_list COMMA param

   17 param: type_specifier id
   18      | type_specifier id LC RC

   19 compound_stmt: LB local_declarations statement_list RB

   20 local_declarations: local_declarations var_declaration
   21                   | %empty

   22 statement_list: statement
   23               | statement_list statement

   24 statement: expression_stmt
   25          | compound_stmt
   26          | selection_stmt
   27          | while_stmt
   28          | for_stmt
   29          | return_stmt

   30 expression_stmt: expression SEMI
   31                | SEMI

   32 expression: var ASSIGN expression
   33           | simple_expression

   34 selection_stmt: IF LP expression RP statement
   35               | IF LP expression RP statement ELSE statement

   36 while_stmt: WHILE LP expression RP statement

   37 for_stmt: FOR LP for_param1 SEMI for_param2 SEMI for_param3 RP statement

   38 for_param1: %empty
   39           | var ASSIGN expression

   40 for_param2: %empty
   41           | expression

   42 for_param3: %empty
   43           | var ASSIGN expression

   44 return_stmt: RETURN SEMI
   45            | RETURN expression SEMI

   46 var: id
   47    | id LC expression RC

   48 simple_expression: additive_expression relop additive_expression
   49                  | additive_expression

   50 additive_expression: additive_expression addop term
   51                    | term

   52 relop: LT
   53      | LE
   54      | GT
   55      | GE
   56      | EQ
   57      | NE

   58 addop: ADD
   59      | SUB

   60 term: term mulop factor
   61     | factor

   62 factor: LP expression RP
   63       | var
   64       | call
   65       | NUM

   66 mulop: MUL
   67      | DIV

   68 call: id LP args RP

   69 args: arg_list
   70     | %empty

   71 arg_list: arg_list COMMA expression
   72         | expression

   73 id: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    ID (258) 73
    NUM (259) 7 65
    INT (260) 10
    VOID (261) 11 14
    REAL (262) 12
    CHAR (263)
    RETURN (264) 44 45
    IF (265) 34 35
    ELSE (266) 35
    WHILE (267) 36
    FOR (268) 37
    GT <integer> (269) 54
    LT <integer> (270) 52
    GE <integer> (271) 55
    LE <integer> (272) 53
    NE <integer> (273) 57
    EQ <integer> (274) 56
    ADD <integer> (275) 58
    SUB <integer> (276) 59
    MUL <integer> (277) 66
    DIV <integer> (278) 67
    LP (279) 8 34 35 36 37 62 68
    RP (280) 8 34 35 36 37 62 68
    LB (281) 19
    RB (282) 19
    LC (283) 7 18 47
    RC (284) 7 18 47
    SEMI (285) 6 7 30 31 37 44 45
    COMMA (286) 16 71
    ASSIGN (287) 32 39 43
    ERROR (288)
    LOWER_THAN_ELSE (289)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    program <node> (36)
        on left: 1
        on right: 0
    declaration_list <node> (37)
        on left: 2 3
        on right: 1 3
    declaration <node> (38)
        on left: 4 5
        on right: 2 3
    var_declaration <node> (39)
        on left: 6 7
        on right: 4 20
    fun_declaration <node> (40)
        on left: 8 9
        on right: 5
    type_specifier <node> (41)
        on left: 10 11 12
        on right: 6 7 8 17 18
    params <node> (42)
        on left: 13 14
        on right: 8
    param_list <node> (43)
        on left: 15 16
        on right: 13 16
    param <node> (44)
        on left: 17 18
        on right: 15 16
    compound_stmt <node> (45)
        on left: 19
        on right: 9 25
    local_declarations <node> (46)
        on left: 20 21
        on right: 19 20
    statement_list <node> (47)
        on left: 22 23
        on right: 19 23
    statement <node> (48)
        on left: 24 25 26 27 28 29
        on right: 22 23 34 35 36 37
    expression_stmt <node> (49)
        on left: 30 31
        on right: 24
    expression <node> (50)
        on left: 32 33
        on right: 30 32 34 35 36 39 41 43 45 47 62 71 72
    selection_stmt <node> (51)
        on left: 34 35
        on right: 26
    while_stmt <node> (52)
        on left: 36
        on right: 27
    for_stmt <node> (53)
        on left: 37
        on right: 28
    for_param1 <node> (54)
        on left: 38 39
        on right: 37
    for_param2 <node> (55)
        on left: 40 41
        on right: 37
    for_param3 <node> (56)
        on left: 42 43
        on right: 37
    return_stmt <node> (57)
        on left: 44 45
        on right: 29
    var <node> (58)
        on left: 46 47
        on right: 32 39 43 63
    simple_expression <node> (59)
        on left: 48 49
        on right: 33
    additive_expression <node> (60)
        on left: 50 51
        on right: 48 49 50
    relop <node> (61)
        on left: 52 53 54 55 56 57
        on right: 48
    addop <node> (62)
        on left: 58 59
        on right: 50
    term <node> (63)
        on left: 60 61
        on right: 50 51 60
    factor <node> (64)
        on left: 62 63 64 65
        on right: 60 61
    mulop <node> (65)
        on left: 66 67
        on right: 60
    call <node> (66)
        on left: 68
        on right: 64
    args <node> (67)
        on left: 69 70
        on right: 68
    arg_list <node> (68)
        on left: 71 72
        on right: 69 71
    id <node> (69)
        on left: 73
        on right: 6 7 8 17 18 46 47 68


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2
    REAL  shift, and go to state 3
    LB    shift, and go to state 4

    program           go to state 5
    declaration_list  go to state 6
    declaration       go to state 7
    var_declaration   go to state 8
    fun_declaration   go to state 9
    type_specifier    go to state 10
    compound_stmt     go to state 11


State 1

   10 type_specifier: INT .

    $default  reduce using rule 10 (type_specifier)


State 2

   11 type_specifier: VOID .

    $default  reduce using rule 11 (type_specifier)


State 3

   12 type_specifier: REAL .

    $default  reduce using rule 12 (type_specifier)


State 4

   19 compound_stmt: LB . local_declarations statement_list RB

    $default  reduce using rule 21 (local_declarations)

    local_declarations  go to state 12


State 5

    0 $accept: program . $end

    $end  shift, and go to state 13


State 6

    1 program: declaration_list .
    3 declaration_list: declaration_list . declaration

    INT   shift, and go to state 1
    VOID  shift, and go to state 2
    REAL  shift, and go to state 3
    LB    shift, and go to state 4

    $default  reduce using rule 1 (program)

    declaration      go to state 14
    var_declaration  go to state 8
    fun_declaration  go to state 9
    type_specifier   go to state 10
    compound_stmt    go to state 11


State 7

    2 declaration_list: declaration .

    $default  reduce using rule 2 (declaration_list)


State 8

    4 declaration: var_declaration .

    $default  reduce using rule 4 (declaration)


State 9

    5 declaration: fun_declaration .

    $default  reduce using rule 5 (declaration)


State 10

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LC NUM RC SEMI
    8 fun_declaration: type_specifier . id LP params RP

    ID  shift, and go to state 15

    id  go to state 16


State 11

    9 fun_declaration: compound_stmt .

    $default  reduce using rule 9 (fun_declaration)


State 12

   19 compound_stmt: LB local_declarations . statement_list RB
   20 local_declarations: local_declarations . var_declaration

    ID      shift, and go to state 15
    NUM     shift, and go to state 17
    INT     shift, and go to state 1
    VOID    shift, and go to state 2
    REAL    shift, and go to state 3
    RETURN  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20
    FOR     shift, and go to state 21
    LP      shift, and go to state 22
    LB      shift, and go to state 4
    SEMI    shift, and go to state 23

    var_declaration      go to state 24
    type_specifier       go to state 25
    compound_stmt        go to state 26
    statement_list       go to state 27
    statement            go to state 28
    expression_stmt      go to state 29
    expression           go to state 30
    selection_stmt       go to state 31
    while_stmt           go to state 32
    for_stmt             go to state 33
    return_stmt          go to state 34
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 13

    0 $accept: program $end .

    $default  accept


State 14

    3 declaration_list: declaration_list declaration .

    $default  reduce using rule 3 (declaration_list)


State 15

   73 id: ID .

    $default  reduce using rule 73 (id)


State 16

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LC NUM RC SEMI
    8 fun_declaration: type_specifier id . LP params RP

    LP    shift, and go to state 42
    LC    shift, and go to state 43
    SEMI  shift, and go to state 44


State 17

   65 factor: NUM .

    $default  reduce using rule 65 (factor)


State 18

   44 return_stmt: RETURN . SEMI
   45            | RETURN . expression SEMI

    ID    shift, and go to state 15
    NUM   shift, and go to state 17
    LP    shift, and go to state 22
    SEMI  shift, and go to state 45

    expression           go to state 46
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 19

   34 selection_stmt: IF . LP expression RP statement
   35               | IF . LP expression RP statement ELSE statement

    LP  shift, and go to state 47


State 20

   36 while_stmt: WHILE . LP expression RP statement

    LP  shift, and go to state 48


State 21

   37 for_stmt: FOR . LP for_param1 SEMI for_param2 SEMI for_param3 RP statement

    LP  shift, and go to state 49


State 22

   62 factor: LP . expression RP

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 50
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 23

   31 expression_stmt: SEMI .

    $default  reduce using rule 31 (expression_stmt)


State 24

   20 local_declarations: local_declarations var_declaration .

    $default  reduce using rule 20 (local_declarations)


State 25

    6 var_declaration: type_specifier . id SEMI
    7                | type_specifier . id LC NUM RC SEMI

    ID  shift, and go to state 15

    id  go to state 51


State 26

   25 statement: compound_stmt .

    $default  reduce using rule 25 (statement)


State 27

   19 compound_stmt: LB local_declarations statement_list . RB
   23 statement_list: statement_list . statement

    ID      shift, and go to state 15
    NUM     shift, and go to state 17
    RETURN  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20
    FOR     shift, and go to state 21
    LP      shift, and go to state 22
    LB      shift, and go to state 4
    RB      shift, and go to state 52
    SEMI    shift, and go to state 23

    compound_stmt        go to state 26
    statement            go to state 53
    expression_stmt      go to state 29
    expression           go to state 30
    selection_stmt       go to state 31
    while_stmt           go to state 32
    for_stmt             go to state 33
    return_stmt          go to state 34
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 28

   22 statement_list: statement .

    $default  reduce using rule 22 (statement_list)


State 29

   24 statement: expression_stmt .

    $default  reduce using rule 24 (statement)


State 30

   30 expression_stmt: expression . SEMI

    SEMI  shift, and go to state 54


State 31

   26 statement: selection_stmt .

    $default  reduce using rule 26 (statement)


State 32

   27 statement: while_stmt .

    $default  reduce using rule 27 (statement)


State 33

   28 statement: for_stmt .

    $default  reduce using rule 28 (statement)


State 34

   29 statement: return_stmt .

    $default  reduce using rule 29 (statement)


State 35

   32 expression: var . ASSIGN expression
   63 factor: var .

    ASSIGN  shift, and go to state 55

    $default  reduce using rule 63 (factor)


State 36

   33 expression: simple_expression .

    $default  reduce using rule 33 (expression)


State 37

   48 simple_expression: additive_expression . relop additive_expression
   49                  | additive_expression .
   50 additive_expression: additive_expression . addop term

    GT   shift, and go to state 56
    LT   shift, and go to state 57
    GE   shift, and go to state 58
    LE   shift, and go to state 59
    NE   shift, and go to state 60
    EQ   shift, and go to state 61
    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 49 (simple_expression)

    relop  go to state 64
    addop  go to state 65


State 38

   51 additive_expression: term .
   60 term: term . mulop factor

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 51 (additive_expression)

    mulop  go to state 68


State 39

   61 term: factor .

    $default  reduce using rule 61 (term)


State 40

   64 factor: call .

    $default  reduce using rule 64 (factor)


State 41

   46 var: id .
   47    | id . LC expression RC
   68 call: id . LP args RP

    LP  shift, and go to state 69
    LC  shift, and go to state 70

    $default  reduce using rule 46 (var)


State 42

    8 fun_declaration: type_specifier id LP . params RP

    INT   shift, and go to state 1
    VOID  shift, and go to state 71
    REAL  shift, and go to state 3

    type_specifier  go to state 72
    params          go to state 73
    param_list      go to state 74
    param           go to state 75


State 43

    7 var_declaration: type_specifier id LC . NUM RC SEMI

    NUM  shift, and go to state 76


State 44

    6 var_declaration: type_specifier id SEMI .

    $default  reduce using rule 6 (var_declaration)


State 45

   44 return_stmt: RETURN SEMI .

    $default  reduce using rule 44 (return_stmt)


State 46

   45 return_stmt: RETURN expression . SEMI

    SEMI  shift, and go to state 77


State 47

   34 selection_stmt: IF LP . expression RP statement
   35               | IF LP . expression RP statement ELSE statement

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 78
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 48

   36 while_stmt: WHILE LP . expression RP statement

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 79
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 49

   37 for_stmt: FOR LP . for_param1 SEMI for_param2 SEMI for_param3 RP statement

    ID  shift, and go to state 15

    $default  reduce using rule 38 (for_param1)

    for_param1  go to state 80
    var         go to state 81
    id          go to state 82


State 50

   62 factor: LP expression . RP

    RP  shift, and go to state 83


State 51

    6 var_declaration: type_specifier id . SEMI
    7                | type_specifier id . LC NUM RC SEMI

    LC    shift, and go to state 43
    SEMI  shift, and go to state 44


State 52

   19 compound_stmt: LB local_declarations statement_list RB .

    $default  reduce using rule 19 (compound_stmt)


State 53

   23 statement_list: statement_list statement .

    $default  reduce using rule 23 (statement_list)


State 54

   30 expression_stmt: expression SEMI .

    $default  reduce using rule 30 (expression_stmt)


State 55

   32 expression: var ASSIGN . expression

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 84
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 56

   54 relop: GT .

    $default  reduce using rule 54 (relop)


State 57

   52 relop: LT .

    $default  reduce using rule 52 (relop)


State 58

   55 relop: GE .

    $default  reduce using rule 55 (relop)


State 59

   53 relop: LE .

    $default  reduce using rule 53 (relop)


State 60

   57 relop: NE .

    $default  reduce using rule 57 (relop)


State 61

   56 relop: EQ .

    $default  reduce using rule 56 (relop)


State 62

   58 addop: ADD .

    $default  reduce using rule 58 (addop)


State 63

   59 addop: SUB .

    $default  reduce using rule 59 (addop)


State 64

   48 simple_expression: additive_expression relop . additive_expression

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    var                  go to state 85
    additive_expression  go to state 86
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 65

   50 additive_expression: additive_expression addop . term

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    var     go to state 85
    term    go to state 87
    factor  go to state 39
    call    go to state 40
    id      go to state 41


State 66

   66 mulop: MUL .

    $default  reduce using rule 66 (mulop)


State 67

   67 mulop: DIV .

    $default  reduce using rule 67 (mulop)


State 68

   60 term: term mulop . factor

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    var     go to state 85
    factor  go to state 88
    call    go to state 40
    id      go to state 41


State 69

   68 call: id LP . args RP

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    $default  reduce using rule 70 (args)

    expression           go to state 89
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    args                 go to state 90
    arg_list             go to state 91
    id                   go to state 41


State 70

   47 var: id LC . expression RC

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 92
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 71

   11 type_specifier: VOID .
   14 params: VOID .

    RP        reduce using rule 14 (params)
    $default  reduce using rule 11 (type_specifier)


State 72

   17 param: type_specifier . id
   18      | type_specifier . id LC RC

    ID  shift, and go to state 15

    id  go to state 93


State 73

    8 fun_declaration: type_specifier id LP params . RP

    RP  shift, and go to state 94


State 74

   13 params: param_list .
   16 param_list: param_list . COMMA param

    COMMA  shift, and go to state 95

    $default  reduce using rule 13 (params)


State 75

   15 param_list: param .

    $default  reduce using rule 15 (param_list)


State 76

    7 var_declaration: type_specifier id LC NUM . RC SEMI

    RC  shift, and go to state 96


State 77

   45 return_stmt: RETURN expression SEMI .

    $default  reduce using rule 45 (return_stmt)


State 78

   34 selection_stmt: IF LP expression . RP statement
   35               | IF LP expression . RP statement ELSE statement

    RP  shift, and go to state 97


State 79

   36 while_stmt: WHILE LP expression . RP statement

    RP  shift, and go to state 98


State 80

   37 for_stmt: FOR LP for_param1 . SEMI for_param2 SEMI for_param3 RP statement

    SEMI  shift, and go to state 99


State 81

   39 for_param1: var . ASSIGN expression

    ASSIGN  shift, and go to state 100


State 82

   46 var: id .
   47    | id . LC expression RC

    LC  shift, and go to state 70

    $default  reduce using rule 46 (var)


State 83

   62 factor: LP expression RP .

    $default  reduce using rule 62 (factor)


State 84

   32 expression: var ASSIGN expression .

    $default  reduce using rule 32 (expression)


State 85

   63 factor: var .

    $default  reduce using rule 63 (factor)


State 86

   48 simple_expression: additive_expression relop additive_expression .
   50 additive_expression: additive_expression . addop term

    ADD  shift, and go to state 62
    SUB  shift, and go to state 63

    $default  reduce using rule 48 (simple_expression)

    addop  go to state 65


State 87

   50 additive_expression: additive_expression addop term .
   60 term: term . mulop factor

    MUL  shift, and go to state 66
    DIV  shift, and go to state 67

    $default  reduce using rule 50 (additive_expression)

    mulop  go to state 68


State 88

   60 term: term mulop factor .

    $default  reduce using rule 60 (term)


State 89

   72 arg_list: expression .

    $default  reduce using rule 72 (arg_list)


State 90

   68 call: id LP args . RP

    RP  shift, and go to state 101


State 91

   69 args: arg_list .
   71 arg_list: arg_list . COMMA expression

    COMMA  shift, and go to state 102

    $default  reduce using rule 69 (args)


State 92

   47 var: id LC expression . RC

    RC  shift, and go to state 103


State 93

   17 param: type_specifier id .
   18      | type_specifier id . LC RC

    LC  shift, and go to state 104

    $default  reduce using rule 17 (param)


State 94

    8 fun_declaration: type_specifier id LP params RP .

    $default  reduce using rule 8 (fun_declaration)


State 95

   16 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2
    REAL  shift, and go to state 3

    type_specifier  go to state 72
    param           go to state 105


State 96

    7 var_declaration: type_specifier id LC NUM RC . SEMI

    SEMI  shift, and go to state 106


State 97

   34 selection_stmt: IF LP expression RP . statement
   35               | IF LP expression RP . statement ELSE statement

    ID      shift, and go to state 15
    NUM     shift, and go to state 17
    RETURN  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20
    FOR     shift, and go to state 21
    LP      shift, and go to state 22
    LB      shift, and go to state 4
    SEMI    shift, and go to state 23

    compound_stmt        go to state 26
    statement            go to state 107
    expression_stmt      go to state 29
    expression           go to state 30
    selection_stmt       go to state 31
    while_stmt           go to state 32
    for_stmt             go to state 33
    return_stmt          go to state 34
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 98

   36 while_stmt: WHILE LP expression RP . statement

    ID      shift, and go to state 15
    NUM     shift, and go to state 17
    RETURN  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20
    FOR     shift, and go to state 21
    LP      shift, and go to state 22
    LB      shift, and go to state 4
    SEMI    shift, and go to state 23

    compound_stmt        go to state 26
    statement            go to state 108
    expression_stmt      go to state 29
    expression           go to state 30
    selection_stmt       go to state 31
    while_stmt           go to state 32
    for_stmt             go to state 33
    return_stmt          go to state 34
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 99

   37 for_stmt: FOR LP for_param1 SEMI . for_param2 SEMI for_param3 RP statement

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    $default  reduce using rule 40 (for_param2)

    expression           go to state 109
    for_param2           go to state 110
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 100

   39 for_param1: var ASSIGN . expression

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 111
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 101

   68 call: id LP args RP .

    $default  reduce using rule 68 (call)


State 102

   71 arg_list: arg_list COMMA . expression

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 112
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 103

   47 var: id LC expression RC .

    $default  reduce using rule 47 (var)


State 104

   18 param: type_specifier id LC . RC

    RC  shift, and go to state 113


State 105

   16 param_list: param_list COMMA param .

    $default  reduce using rule 16 (param_list)


State 106

    7 var_declaration: type_specifier id LC NUM RC SEMI .

    $default  reduce using rule 7 (var_declaration)


State 107

   34 selection_stmt: IF LP expression RP statement .
   35               | IF LP expression RP statement . ELSE statement

    ELSE  shift, and go to state 114

    $default  reduce using rule 34 (selection_stmt)


State 108

   36 while_stmt: WHILE LP expression RP statement .

    $default  reduce using rule 36 (while_stmt)


State 109

   41 for_param2: expression .

    $default  reduce using rule 41 (for_param2)


State 110

   37 for_stmt: FOR LP for_param1 SEMI for_param2 . SEMI for_param3 RP statement

    SEMI  shift, and go to state 115


State 111

   39 for_param1: var ASSIGN expression .

    $default  reduce using rule 39 (for_param1)


State 112

   71 arg_list: arg_list COMMA expression .

    $default  reduce using rule 71 (arg_list)


State 113

   18 param: type_specifier id LC RC .

    $default  reduce using rule 18 (param)


State 114

   35 selection_stmt: IF LP expression RP statement ELSE . statement

    ID      shift, and go to state 15
    NUM     shift, and go to state 17
    RETURN  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20
    FOR     shift, and go to state 21
    LP      shift, and go to state 22
    LB      shift, and go to state 4
    SEMI    shift, and go to state 23

    compound_stmt        go to state 26
    statement            go to state 116
    expression_stmt      go to state 29
    expression           go to state 30
    selection_stmt       go to state 31
    while_stmt           go to state 32
    for_stmt             go to state 33
    return_stmt          go to state 34
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 115

   37 for_stmt: FOR LP for_param1 SEMI for_param2 SEMI . for_param3 RP statement

    ID  shift, and go to state 15

    $default  reduce using rule 42 (for_param3)

    for_param3  go to state 117
    var         go to state 118
    id          go to state 82


State 116

   35 selection_stmt: IF LP expression RP statement ELSE statement .

    $default  reduce using rule 35 (selection_stmt)


State 117

   37 for_stmt: FOR LP for_param1 SEMI for_param2 SEMI for_param3 . RP statement

    RP  shift, and go to state 119


State 118

   43 for_param3: var . ASSIGN expression

    ASSIGN  shift, and go to state 120


State 119

   37 for_stmt: FOR LP for_param1 SEMI for_param2 SEMI for_param3 RP . statement

    ID      shift, and go to state 15
    NUM     shift, and go to state 17
    RETURN  shift, and go to state 18
    IF      shift, and go to state 19
    WHILE   shift, and go to state 20
    FOR     shift, and go to state 21
    LP      shift, and go to state 22
    LB      shift, and go to state 4
    SEMI    shift, and go to state 23

    compound_stmt        go to state 26
    statement            go to state 121
    expression_stmt      go to state 29
    expression           go to state 30
    selection_stmt       go to state 31
    while_stmt           go to state 32
    for_stmt             go to state 33
    return_stmt          go to state 34
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 120

   43 for_param3: var ASSIGN . expression

    ID   shift, and go to state 15
    NUM  shift, and go to state 17
    LP   shift, and go to state 22

    expression           go to state 122
    var                  go to state 35
    simple_expression    go to state 36
    additive_expression  go to state 37
    term                 go to state 38
    factor               go to state 39
    call                 go to state 40
    id                   go to state 41


State 121

   37 for_stmt: FOR LP for_param1 SEMI for_param2 SEMI for_param3 RP statement .

    $default  reduce using rule 37 (for_stmt)


State 122

   43 for_param3: var ASSIGN expression .

    $default  reduce using rule 43 (for_param3)
